buildscript {
    repositories {
        maven { url = 'https://maven.minecraftforge.net' }
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '5.1.+', changing: true
    }
}
plugins {
    id "org.sonarqube" version "3.1.1"
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven-publish'

version = "${version}"
group = 'cy.jdkdigital.productivebees'
archivesBaseName = 'productivebees'

java.toolchain.languageVersion = JavaLanguageVersion.of(16)

println('Java: ' + System.getProperty('java.version') + ' JVM: ' + System.getProperty('java.vm.version') + '(' + System.getProperty('java.vendor') + ') Arch: ' + System.getProperty('os.arch'))
minecraft {
    mappings channel: 'official', version: '1.17.1'
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    // Default run configurations.
    // These can be tweaked, removed, or duplicated as needed.
    runs {
        client {
            property 'mixin.env.remapRefMap', 'true'
            property 'mixin.env.refMapRemappingFile', "${buildDir}/createSrgToMcp/output.srg"

            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
//            property 'mixin.env.disableRefMap', 'true'

            mods {
                productivebees {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
//            property 'mixin.env.disableRefMap', 'true'

            mods {
                productivebees {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'REGISTRIES'
            property 'forge.logging.console.level', 'debug'
            property 'mixin.env.disableRefMap', 'true'

            // Specify the modid for data generation, where to output the resulting resource, and where to look for existing resources.
            args '--mod', 'productivebees', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            mods {
                productivebees {
                    source sourceSets.main
                }
            }
        }
    }
}

// Include resources generated by data generators.
// sourceSets.main.resources { srcDir 'src/generated/resources' }

repositories {
    maven {
        url "https://www.cursemaven.com"
    }
    flatDir {
        dirs 'mods'
    }
    maven {
        url 'https://www.dogforce-games.com/maven/'
    }
    maven {
        name = "JEI Maven"
        url "https://dvs1.progwml6.com/files/maven/"
    }
    maven {
        url 'https://maven.blamejared.com'
    }
//    maven { // TOP
//        name 'tterrag maven'
//        url "https://maven.tterrag.com/"
//    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${forgeversion}"

//    // compile against the JEI API but do not include it at runtime
//    compileOnly fg.deobf("mezz.jei:jei-${jei_version}:api")
//    // at runtime, use the full JEI jar
//    runtimeOnly fg.deobf("mezz.jei:jei-${jei_version}")

//    compileOnly fg.deobf ("mcjty.theoneprobe:TheOneProbe-${top_version}:api")
//    runtime fg.deobf ("mcjty.theoneprobe:TheOneProbe-${top_version}")

//    compileOnly fg.deobf("vazkii.patchouli:Patchouli:${patchouli_version}:api")
//    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:${patchouli_version}")

    implementation fg.deobf("curse.maven:the-one-probe-245211:3430022")
    implementation fg.deobf("curse.maven:jade-324717:3425040")
    implementation fg.deobf("curse.maven:architectury-forge-419699:3415033")
    implementation fg.deobf("curse.maven:cloth-config-forge-348521:3413207")
    implementation fg.deobf("curse.maven:jei-238222:3438501")
    implementation fg.deobf("curse.maven:trophymanager-510170:3423808")
    implementation fg.deobf("curse.maven:ato-405593:3439307")
//    implementation fg.deobf("curse.maven:mekanism-268560:3206392")
//    implementation fg.deobf("curse.maven:mekanism-generators-268566:3206395")
//    implementation fg.deobf("curse.maven:mantle-74924:3352484")
//    implementation fg.deobf("curse.maven:tinkers-construct-74072:3352983")
//    implementation fg.deobf("curse.maven:bigreactors-250277:3211479")
//    implementation fg.deobf("curse.maven:zerocore-247921:3211476")
//    implementation fg.deobf("curse.maven:evilcraft-74610:3292057")
//    implementation fg.deobf("curse.maven:cyclops-core-232758:3292066")
//    implementation fg.deobf("curse.maven:curios-309927:3275653")
//    implementation fg.deobf("curse.maven:observerlib-316833:3320850")
//    implementation fg.deobf("curse.maven:cofh-core-69162:3249453")
//    implementation fg.deobf("curse.maven:thermal-foundation-222880:3248150")
//    implementation fg.deobf("curse.maven:thermal-expansion-69163:3247000")
////    implementation fg.deobf('curse.maven:botania-225643:3300995')
//    implementation fg.deobf("curse.maven:cucumber-272335:3249370")
//    implementation fg.deobf("curse.maven:mystical-agriculture-246640:3251398")
//    implementation fg.deobf("curse.maven:immersive-engineering-231951:3377691")
////    implementation fg.deobf("curse.maven:create-328085:3261455")
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
                "Specification-Title": "Productive Bees",
                "Specification-Vendor": "productivebees",
                "Specification-Version": "1.0", // We are version 1 of ourselves
                "Implementation-Title": project.name,
                "Implementation-Version": "${version}",
                "Implementation-Vendor" :"productivebees",
                "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

jar.finalizedBy('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}

sonarqube {
    properties {
        property "sonar.projectKey", "JDKDigital_productive-bees"
        property "sonar.organization", "jdkdigital"
        property "sonar.host.url", "https://sonarcloud.io"
    }
}