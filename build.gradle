buildscript {
    repositories {
        maven { url = 'https://files.minecraftforge.net/maven' }
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath group: 'net.minecraftforge.gradle', name: 'ForgeGradle', version: '3.+', changing: true
    }
}
apply plugin: 'net.minecraftforge.gradle'
// Only edit below this line, the above code adds and enables the necessary things for Forge to be setup.
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'maven-publish'

version = "${version}"
group = 'cy.jdkdigital.productivebees'
archivesBaseName = 'productivebees'

sourceCompatibility = targetCompatibility = compileJava.sourceCompatibility = compileJava.targetCompatibility = '1.8' // Need this here so eclipse task generates correctly.

minecraft {
    mappings channel: 'snapshot', version: mcp_mappings
    accessTransformer = file('src/main/resources/META-INF/accesstransformer.cfg')

    runs {
        client {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            mods {
                productivebees {
                    source sourceSets.main
                }
            }
        }

        server {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'
            mods {
                productivebees {
                    source sourceSets.main
                }
            }
        }

        data {
            workingDirectory project.file('run')
            property 'forge.logging.markers', 'SCAN,REGISTRIES,REGISTRYDUMP'
            property 'forge.logging.console.level', 'debug'

            args '--mod', 'productivebees', '--all', '--output', file('src/generated/resources/'), '--existing', file('src/main/resources/')

            environment 'target', 'fmluserdevdata'
            mods {
                productivebees {
                    source sourceSets.main
                }
            }
        }
    }
}

repositories {
    flatDir {
        dirs 'mods'
    }
    maven {
        name = "JEI Maven"
        url "http://dvs1.progwml6.com/files/maven"
    }
    maven {
        name = "HWYLA"
        url "http://maven.tehnut.info/"
    }
    maven {
        url 'https://maven.blamejared.com'
    }
    maven { // TOP
        name 'tterrag maven'
        url "http://maven.tterrag.com/"
    }
}

dependencies {
    minecraft "net.minecraftforge:forge:${forgeversion}"

    // compile against the JEI API but do not include it at runtime
    compileOnly fg.deobf("mezz.jei:jei-${mcversion}:${jei_version}:api")
    // at runtime, use the full JEI jar
    runtimeOnly fg.deobf("mezz.jei:jei-${mcversion}:${jei_version}")

    compileOnly fg.deobf ("mcjty.theoneprobe:TheOneProbe-${top_version}:api")
    runtime fg.deobf ("mcjty.theoneprobe:TheOneProbe-${top_version}")

    compileOnly fg.deobf("vazkii.patchouli:Patchouli:${patchouli_version}:api")
    runtimeOnly fg.deobf("vazkii.patchouli:Patchouli:${patchouli_version}")

    compile fg.deobf("mcp.mobius.waila:Hwyla:${hwyla_version}")

//    implementation fg.deobf('mods:byg:1.0.11')
    implementation fg.deobf('mods:the_bumblezone-1.15.2:1.3.10')
    implementation fg.deobf('mods:Mekanism-1.15.2:9.10.9.422')
    implementation fg.deobf('mods:cofh_core-1.15.2:1.0.2')
    implementation fg.deobf('mods:thermal-1.15.2:1.0.2')
    implementation fg.deobf('mods:thermal_expansion-1.15.2:1.0.2')
//    implementation fg.deobf('mods:allthemodium-1.0.4-1.15.2:31.2.36')
    implementation fg.deobf('mods:curios-FORGE-1.15.2:2.0.2.6')
    implementation fg.deobf('mods:Botania-r1.15:388')
    implementation fg.deobf('mods:Lollipop-1.15.2:1.0.16')
    implementation fg.deobf('mods:Powah-1.15.2:1.1.14')
    implementation fg.deobf('mods:appliedenergistics2-1.15:7.0.2')
    implementation fg.deobf('mods:SilentLib-1.15.2:4.6.6+59')
    implementation fg.deobf('mods:SilentGems-1.15.2:3.6.2+98')
    implementation fg.deobf('mods:SilentMechanisms-1.15.2:0.8.0+59')
    implementation fg.deobf('mods:Abnormals-Core-1.15.2:1.0.6')
    implementation fg.deobf('mods:Buzzier-Bees-1.15.2:1.5.2')
//    implementation fg.deobf('mods:glassential-forge-1.15.2:1.1.4')
//    implementation fg.deobf('mods:simplefarming-1.15.2:1.3.0')
    implementation fg.deobf('mods:Cucumber-1.15.2:3.0.9')
    implementation fg.deobf('mods:MysticalAgriculture-1.15.2:3.0.10')
    implementation fg.deobf('mods:titanium-1.15.2:2.4.2')
    implementation fg.deobf('mods:industrial-foregoing-1.15.2:2.3.3')
    implementation fg.deobf('mods:AutoRegLib-1.5:40')
    implementation fg.deobf('mods:Quark-r2.1:245')
}

// Example for how to get properties into the manifest for reading by the runtime..
jar {
    manifest {
        attributes([
            "Specification-Title": "Productive Bees",
            "Specification-Vendor": "productivebees",
            "Specification-Version": "1", // We are version 1 of ourselves
            "Implementation-Title": project.name,
            "Implementation-Version": "${version}",
            "Implementation-Vendor" :"productivebees",
            "Implementation-Timestamp": new Date().format("yyyy-MM-dd'T'HH:mm:ssZ")
        ])
    }
}

// Example configuration to allow publishing using the maven-publish task
// This is the preferred method to reobfuscate your jar file
jar.finalizedBy('reobfJar')
// However if you are in a multi-project build, dev time needs unobfed jar files, so you can delay the obfuscation until publishing by doing
//publish.dependsOn('reobfJar')

publishing {
    publications {
        mavenJava(MavenPublication) {
            artifact jar
        }
    }
    repositories {
        maven {
            url "file:///${project.projectDir}/mcmodsrepo"
        }
    }
}